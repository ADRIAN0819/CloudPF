version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch-${TENANT_ID:-default}
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data_${TENANT_ID:-default}:/usr/share/elasticsearch/data
    ports:
      - "${ES_PORT:-9200}:9200"
      - "${ES_TRANSPORT_PORT:-9300}:9300"
    networks:
      - elastic
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana-${TENANT_ID:-default}
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana-${TENANT_ID:-default}
    ports:
      - "${KIBANA_PORT:-5601}:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash-${TENANT_ID:-default}
    volumes:
      - ./logstash/config:/usr/share/logstash/config
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "${LOGSTASH_PORT:-5000}:5000"
    depends_on:
      - elasticsearch
    networks:
      - elastic
    restart: unless-stopped

networks:
  elastic:
    driver: bridge

volumes:
  es_data_default:
    driver: local
  es_data_tenant1:
    driver: local
  es_data_tenant2:
    driver: local
  es_data_tenant3:
    driver: local
